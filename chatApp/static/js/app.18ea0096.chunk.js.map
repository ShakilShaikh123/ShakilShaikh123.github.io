{"version":3,"sources":["Chat/src/styles/colors.js","Chat/src/styles/chat-room.js","Chat/src/styles/index.js","Chat/src/components/common/Loader/styles.js","Chat/src/components/common/Loader/index.js","Chat/src/constants/index.js","Chat/src/constants/collections.js","Chat/src/services/FirebaseService.js","Chat/src/services/index.js","Chat/src/contexts.js","Chat/src/components/common/Button/styles.js","Chat/src/components/common/Button/index.js","Chat/src/components/Input/styles.js","Chat/src/components/Input/index.js","Chat/src/components/Message/styles.js","Chat/src/components/Message/index.js","Chat/src/components/HooksExample/reducers.js","Chat/src/components/HooksExample/index.js","Chat/src/index.js","screens/HomeScreen.js","screens/LinksScreen.js","navigation/BottomTabNavigator.js","App.js","navigation/useLinking.js","web-build/register-service-worker.js","assets/fonts/SpaceMono-Regular.ttf"],"names":["WHITE","BLACK","PRIMARY","GREY","StyleSheet","create","messagesContainer","height","paddingBottom","inputContainer","width","position","bottom","paddingVertical","paddingLeft","borderTopWidth","borderTopColor","COLORS","_COLORS","chatRoomStyles","_chatRoomStyles","container","top","left","justifyContent","alignItems","Loader","View","style","styles","ActivityIndicator","animating","color","size","COLLECTIONS","MESSAGES","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firebaseService","firebase","auth","firestore","messageRef","this","collection","signInAnonymously","response","user","error","orderBy","limit","get","messages","docs","message","uid","add","user_id","created_at","Date","UserContext","createContext","marginHorizontal","paddingHorizontal","backgroundColor","borderRadius","text","Button","disabled","onPress","TouchableOpacity","Text","flexDirection","input","borderColor","borderWidth","Input","useContext","useState","isLoading","setIsLoading","setMessage","handlePress","useCallback","createMessage","then","TextInput","value","onChangeText","placeholder","textContainer","marginLeft","rightContainer","rightTextContainer","marginRight","leftText","textAlign","rightText","fontSize","flattenedStyles","flatten","Message","isLeftSide","side","containerStyles","textContainerStyles","textStyles","messagesReducer","state","action","type","unionWith","payload","a","b","id","sort","aData","data","seconds","Error","HooksExample","useReducer","dispatchMessages","useEffect","onSnapshot","snapshot","ScrollView","FlatList","inverted","keyExtractor","item","renderItem","App","setUser","signIn","Alert","alert","Provider","React","navigationOptions","header","flex","developmentModeText","marginBottom","lineHeight","contentContainer","paddingTop","welcomeContainer","marginTop","welcomeImage","resizeMode","getStartedContainer","homeScreenFilename","marginVertical","codeHighlightText","codeHighlightContainer","getStartedText","tabBarInfoContainer","right","Platform","select","ios","shadowColor","shadowOffset","shadowOpacity","shadowRadius","android","elevation","tabBarInfoText","navigationFilename","helpContainer","helpLink","helpLinkText","optionIconContainer","option","hairlineWidth","borderBottomWidth","lastOption","optionText","alignSelf","createBottomTabNavigator","Stack","createStackNavigator","props","isLoadingComplete","setLoadingComplete","initialNavigationState","setInitialNavigationState","containerRef","getInitialState","useLinking","prefixes","Linking","makeUrl","config","Root","path","screens","Home","Links","Settings","async","SplashScreen","preventAutoHide","Font","Ionicons","font","require","console","warn","hide","skipLoadingScreen","OS","StatusBar","barStyle","NavigationContainer","ref","initialState","Navigator","Screen","name","component","ChatApp","navigator","window","addEventListener","serviceWorker","register","scope","info","catch","module","exports"],"mappings":"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","file":"static/js/app.18ea0096.chunk.js","sourcesContent":["export default {\n  WHITE: '#FFF',\n  BLACK: '#000',\n  PRIMARY: '#5FB0FF',\n  GREY: '#B4B4B4'\n}\n","import { StyleSheet } from 'react-native'\n\nimport COLORS from './colors'\n\nexport default StyleSheet.create({\n  messagesContainer: {\n    height: '100%',\n    paddingBottom: 60\n  },\n  inputContainer: {\n    width: '100%',\n    height: 60,\n    // backgroundColor: 'red',\n    position: 'absolute',\n    bottom: 0,\n    paddingVertical: 10,\n    paddingLeft: 20,\n\n    borderTopWidth: 1,\n    borderTopColor: COLORS.GREY\n  }\n})\n","import _COLORS from './colors';\nimport _chatRoomStyles from './chat-room';\n\nexport const COLORS = _COLORS;\nexport const chatRoomStyles = _chatRoomStyles; \n","import { StyleSheet } from 'react-native'\n\nexport default StyleSheet.create({\n  container: {\n    position: 'absolute',\n\n    top: 0,\n    left: 0,\n\n    height: '100%',\n    width: '100%',\n\n    justifyContent: 'center',\n    alignItems: 'center'\n  }\n})\n","import React from 'react'\nimport { ActivityIndicator, View } from 'react-native'\n\nimport { COLORS } from '../../../styles'\n\nimport styles from './styles'\n\nexport default function Loader () {\n  return (\n    <View style={styles.container}>\n      <ActivityIndicator animating color={COLORS.PRIMARY} size=\"small\"/>\n    </View>\n  )\n}\n","import _COLLECTIONS from './collections';\n\nexport const COLLECTIONS = _COLLECTIONS;","export default {\n  MESSAGES: 'messages'\n}\n","// import firebase from '@react-native-firebase/app';\n// import '@react-native-firebase/auth';\n// import '@react-native-firebase/firestore';\nimport * as firebase from 'firebase';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nimport { COLLECTIONS } from '../constants'\n\n// Initialize Firebase\n// const firebaseConfig = {\n//   apiKey: \"api-key\",\n//   authDomain: \"project-id.firebaseapp.com\",\n//   databaseURL: \"https://project-id.firebaseio.com\",\n//   projectId: \"project-id\",\n//   storageBucket: \"project-id.appspot.com\",\n//   messagingSenderId: \"sender-id\",\n//   appId: \"app-id\",\n//   measurementId: \"G-measurement-id\"\n// };\n\n// const firebaseConfig = {\n//   apiKey: \"AIzaSyDEXPvMbituGfE4K5sIHGo2NPUIe_qYOuk\",\n//   authDomain: \"chatpoc-dc4ad.firebaseapp.com\",\n//   databaseURL: \"https://chatpoc-dc4ad.firebaseio.com\",\n//   projectId: \"chatpoc-dc4ad\",\n//   storageBucket: \"chatpoc-dc4ad.appspot.com\",\n//   messagingSenderId: \"286028877559\",\n//   appId: \"1:286028877559:web:52b744123929d3a6f4cdf2\"\n// };\n\nvar firebaseConfig = {\n  apiKey: \"AIzaSyDvVQZRsomhEYf6qvb3F_o4vTf6tEr4tHA\",\n  authDomain: \"procturadminapp.firebaseapp.com\",\n  databaseURL: \"https://procturadminapp.firebaseio.com\",\n  projectId: \"procturadminapp\",\n  storageBucket: \"procturadminapp.appspot.com\",\n  messagingSenderId: \"870450631315\",\n  appId: \"1:870450631315:web:f077984786c13e62e6b366\",\n  measurementId: \"G-L4R8E72NDB\"\n};\n\n\nexport default class FirebaseService {\n  firebase = firebase.initializeApp(firebaseConfig)\n\n  auth = firebase.auth()\n\n  firestore = firebase.firestore()\n\n  messageRef = this.firestore.collection(COLLECTIONS.MESSAGES);\n\n  async signIn() {\n    try {\n      const response = await this.auth.signInAnonymously()\n      return { user: response.user }\n    } catch (error) {\n      return { error }\n    }\n  }\n\n  async fetchMessages() {\n    const messages = await this.messageRef\n      .orderBy('created_at', 'desc')\n      .limit(10)\n      .get()\n\n    return messages.docs\n  }\n\n  async createMessage({ message, uid }) {\n    await this.messageRef.add({\n      message,\n      user_id: uid,\n      created_at: new Date()\n    })\n  }\n}\n","import FirebaseService from './FirebaseService'\n\nconst firebaseService = new FirebaseService()\n\nexport {\n  firebaseService\n}\n","import { createContext } from 'react'\n\nexport const UserContext = createContext(null)\n","import { StyleSheet } from 'react-native'\n\nimport { COLORS } from '../../../styles'\n\nexport default StyleSheet.create({\n  container: {\n    marginHorizontal: 20,\n    paddingVertical: 10,\n    paddingHorizontal: 16,\n    backgroundColor: COLORS.PRIMARY,\n    borderRadius: 3\n  },\n  text: {\n    color: COLORS.WHITE\n  }\n})\n","import React from 'react'\nimport { Text, TouchableOpacity } from 'react-native'\n\nimport styles from './styles'\n\nexport default function Button ({ text, disabled, onPress }) {\n  return (\n    <TouchableOpacity style={styles.container} onPress={onPress} disabled={disabled}>\n      <Text style={styles.text}>{text}</Text>\n    </TouchableOpacity>\n  )\n}\n","import { StyleSheet } from 'react-native'\n\nimport { COLORS } from '../../styles'\n\nexport default StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-around',\n    width: '100%'\n  },\n  inputContainer: {\n    width: '70%'\n  },\n  input: {\n    height: 40,\n    borderColor: COLORS.GREY,\n    borderWidth: 1,\n    borderRadius: 3,\n    flexDirection: 'row',\n    paddingHorizontal: 10\n  }\n})\n","import React, { useCallback, useState, useContext } from 'react'\nimport { View, TextInput } from 'react-native'\n\nimport { firebaseService } from '../../services'\nimport { UserContext } from '../../contexts'\n\nimport Button from '../common/Button'\nimport Loader from '../common/Loader'\n\nimport styles from './styles'\n\nexport default function Input () {\n  const { uid } = useContext(UserContext)\n  const [isLoading, setIsLoading] = useState(false)\n  const [message, setMessage] = useState('')\n\n  const handlePress = useCallback(\n    function () {\n      setIsLoading(true)\n      firebaseService\n        .createMessage({ message, uid })\n        .then(function () {\n          setIsLoading(false)\n          setMessage('')\n        })\n    },\n    [message]\n  )\n\n  return (\n    <View style={styles.container}>\n      <View style={styles.inputContainer}>\n        <TextInput style={styles.input} value={message} onChangeText={setMessage} placeholder=\"Write you message\" />\n      </View>\n\n      <Button text=\"Send\" onPress={handlePress} disabled={isLoading} />\n\n      {isLoading && <Loader />}\n    </View>\n  )\n}\n","import { StyleSheet } from 'react-native'\n\nimport { COLORS } from '../../styles'\n\nconst styles = StyleSheet.create({\n  container: {\n    width: '100%',\n    paddingVertical: 3,\n    paddingHorizontal: 10,\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'flex-start'\n  },\n  textContainer: {\n    width: 160,\n    backgroundColor: COLORS.GREY,\n\n    borderRadius: 40,\n    paddingHorizontal: 15,\n    paddingVertical: 12,\n    marginLeft: 10\n  },\n  rightContainer: {\n    justifyContent: 'flex-end'\n  },\n  rightTextContainer: {\n    backgroundColor: COLORS.PRIMARY,\n    marginRight: 10\n  },\n  leftText: {\n    textAlign: 'left'\n  },\n  rightText: {\n    textAlign: 'right'\n  },\n  text: {\n    fontSize: 12\n  }\n})\n\nconst flattenedStyles = {\n  container: StyleSheet.flatten([styles.container, styles.rightContainer]),\n  textContainer: StyleSheet.flatten([styles.textContainer, styles.rightTextContainer]),\n  leftText: StyleSheet.flatten([styles.leftText, styles.text]),\n  rightText: StyleSheet.flatten([styles.rightText, styles.text])\n}\n\nexport {\n  styles,\n  flattenedStyles\n}\n","import React from 'react'\nimport { View, Text } from 'react-native'\n\nimport { styles, flattenedStyles } from './styles'\n\nexport default function Message ({ message, side }) {\n  const isLeftSide = side === 'left'\n\n  const containerStyles = isLeftSide ? styles.container : flattenedStyles.container\n  const textContainerStyles = isLeftSide ? styles.textContainer : flattenedStyles.textContainer\n  const textStyles = isLeftSide ? flattenedStyles.leftText : flattenedStyles.rightText\n\n  return (\n    <View style={containerStyles}>\n      <View style={textContainerStyles}>\n        <Text style={textStyles}>\n          {message}\n        </Text>\n      </View>\n    </View>\n  )\n}\n","import { unionWith } from 'lodash'\n\nexport function messagesReducer (state, action) {\n  switch (action.type) {\n    case 'add':\n      return unionWith(state, action.payload, function (a, b) {\n        return a.id === b.id\n      }).sort(function (a, b) {\n        const aData = a.data()\n        const bData = b.data()\n\n        return bData.created_at.seconds - aData.created_at.seconds\n      })\n    default:\n      throw new Error('Action type is not implemented!')\n  }\n}\n","import React, { useEffect, useReducer, useContext } from 'react'\nimport { FlatList, SafeAreaView, View, ScrollView } from 'react-native'\n\nimport { firebaseService } from '../../services'\nimport { UserContext } from '../../contexts'\n\nimport Input from '../Input'\nimport Message from '../Message'\n\nimport { messagesReducer } from './reducers'\nimport { chatRoomStyles as styles } from '../../styles'\n\nexport default function HooksExample() {\n  const { uid } = useContext(UserContext)\n  const [messages, dispatchMessages] = useReducer(messagesReducer, [])\n  useEffect(\n    function () {\n      return firebaseService.messageRef\n        .orderBy('created_at', 'desc')\n        .onSnapshot(function (snapshot) {\n          dispatchMessages({ type: 'add', payload: snapshot.docs })\n        })\n    },\n    []\n  )\n\n  return (\n    <View style={styles.messagesContainer}>\n      <ScrollView>\n        <FlatList\n          inverted\n          data={messages}\n          keyExtractor={function (item) {\n            return item.id\n          }}\n          renderItem={function ({ item }) {\n            const data = item.data()\n            const side = data.user_id === uid ? 'right' : 'left'\n\n            return (\n              <Message side={side} message={data.message} />\n            )\n          }}\n        />\n      </ScrollView>\n\n      <View style={styles.inputContainer}>\n        <Input />\n      </View>\n    </View>\n  )\n}\n","import React, { useState, useEffect } from 'react'\nimport { Alert } from 'react-native'\n\nimport Loader from './components/common/Loader'\nimport HooksExample from './components/HooksExample'\n\nimport { UserContext } from './contexts'\nimport { firebaseService } from './services'\n\nexport default function App () {\n  const [user, setUser] = useState(null)\n\n  useEffect(\n    function () {\n      firebaseService.signIn()\n        .then(({ user, error }) => {\n          if (error) {\n            Alert.alert('Something went wrong')\n            return\n          }\n\n          setUser(user)\n        })\n    },\n    []\n  )\n\n  if (!user) {\n    return <Loader />\n  }\n\n  return (\n    <UserContext.Provider value={user}>\n      <HooksExample />\n    </UserContext.Provider>\n  )\n}\n","import * as WebBrowser from 'expo-web-browser';\nimport * as React from 'react';\nimport { Image, Platform, StyleSheet, Text, TouchableOpacity, View } from 'react-native';\nimport { ScrollView } from 'react-native-gesture-handler';\n\nimport { MonoText } from '../components/StyledText';\nimport RBSheet from \"react-native-raw-bottom-sheet\";\nimport Chat from '../Chat/src/index.js';\n\nexport default class HomeScreen extends React.Component {\n  render() {\n    return (\n      <View style={{ backgroundColor: 'red' }}>\n        <Chat />\n      </View>\n    );\n  }\n}\n\nHomeScreen.navigationOptions = {\n  header: null,\n};\n\nfunction DevelopmentModeNotice() {\n  if (__DEV__) {\n    const learnMoreButton = (\n      <Text onPress={handleLearnMorePress} style={styles.helpLinkText}>\n        Learn more\n      </Text>\n    );\n\n    return (\n      <Text style={styles.developmentModeText}>\n        Development mode is enabled: your app will be slower but you can use useful development\n        tools. {learnMoreButton}\n      </Text>\n    );\n  } else {\n    return (\n      <Text style={styles.developmentModeText}>\n        You are not in development mode: your app will run at full speed.\n      </Text>\n    );\n  }\n}\n\nfunction handleLearnMorePress() {\n  WebBrowser.openBrowserAsync('https://docs.expo.io/versions/latest/workflow/development-mode/');\n}\n\nfunction handleHelpPress() {\n  WebBrowser.openBrowserAsync(\n    'https://docs.expo.io/versions/latest/get-started/create-a-new-app/#making-your-first-change'\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n  },\n  developmentModeText: {\n    marginBottom: 20,\n    color: 'rgba(0,0,0,0.4)',\n    fontSize: 14,\n    lineHeight: 19,\n    textAlign: 'center',\n  },\n  contentContainer: {\n    paddingTop: 30,\n  },\n  welcomeContainer: {\n    alignItems: 'center',\n    marginTop: 10,\n    marginBottom: 20,\n  },\n  welcomeImage: {\n    width: 100,\n    height: 80,\n    resizeMode: 'contain',\n    marginTop: 3,\n    marginLeft: -10,\n  },\n  getStartedContainer: {\n    alignItems: 'center',\n    marginHorizontal: 50,\n  },\n  homeScreenFilename: {\n    marginVertical: 7,\n  },\n  codeHighlightText: {\n    color: 'rgba(96,100,109, 0.8)',\n  },\n  codeHighlightContainer: {\n    backgroundColor: 'rgba(0,0,0,0.05)',\n    borderRadius: 3,\n    paddingHorizontal: 4,\n  },\n  getStartedText: {\n    fontSize: 17,\n    color: 'rgba(96,100,109, 1)',\n    lineHeight: 24,\n    textAlign: 'center',\n  },\n  tabBarInfoContainer: {\n    position: 'absolute',\n    bottom: 0,\n    left: 0,\n    right: 0,\n    ...Platform.select({\n      ios: {\n        shadowColor: 'black',\n        shadowOffset: { width: 0, height: -3 },\n        shadowOpacity: 0.1,\n        shadowRadius: 3,\n      },\n      android: {\n        elevation: 20,\n      },\n    }),\n    alignItems: 'center',\n    backgroundColor: '#fbfbfb',\n    paddingVertical: 20,\n  },\n  tabBarInfoText: {\n    fontSize: 17,\n    color: 'rgba(96,100,109, 1)',\n    textAlign: 'center',\n  },\n  navigationFilename: {\n    marginTop: 5,\n  },\n  helpContainer: {\n    marginTop: 15,\n    alignItems: 'center',\n  },\n  helpLink: {\n    paddingVertical: 15,\n  },\n  helpLinkText: {\n    fontSize: 14,\n    color: '#2e78b7',\n  },\n});\n","import { Ionicons } from '@expo/vector-icons';\nimport * as WebBrowser from 'expo-web-browser';\nimport * as React from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\nimport { RectButton, ScrollView } from 'react-native-gesture-handler';\n\nexport default function LinksScreen() {\n  return (\n    <ScrollView style={styles.container} contentContainerStyle={styles.contentContainer}>\n      <OptionButton\n        icon=\"md-school\"\n        label=\"Read the Expo documentation\"\n        onPress={() => WebBrowser.openBrowserAsync('https://docs.expo.io')}\n      />\n\n      <OptionButton\n        icon=\"md-compass\"\n        label=\"Read the React Navigation documentation\"\n        onPress={() => WebBrowser.openBrowserAsync('https://reactnavigation.org')}\n      />\n\n      <OptionButton\n        icon=\"ios-chatboxes\"\n        label=\"Ask a question on the forums\"\n        onPress={() => WebBrowser.openBrowserAsync('https://forums.expo.io')}\n        isLastOption\n      />\n    </ScrollView>\n  );\n}\n\nfunction OptionButton({ icon, label, onPress, isLastOption }) {\n  return (\n    <RectButton style={[styles.option, isLastOption && styles.lastOption]} onPress={onPress}>\n      <View style={{ flexDirection: 'row' }}>\n        <View style={styles.optionIconContainer}>\n          <Ionicons name={icon} size={22} color=\"rgba(0,0,0,0.35)\" />\n        </View>\n        <View style={styles.optionTextContainer}>\n          <Text style={styles.optionText}>{label}</Text>\n        </View>\n      </View>\n    </RectButton>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fafafa',\n  },\n  contentContainer: {\n    paddingTop: 15,\n  },\n  optionIconContainer: {\n    marginRight: 12,\n  },\n  option: {\n    backgroundColor: '#fdfdfd',\n    paddingHorizontal: 15,\n    paddingVertical: 15,\n    borderWidth: StyleSheet.hairlineWidth,\n    borderBottomWidth: 0,\n    borderColor: '#ededed',\n  },\n  lastOption: {\n    borderBottomWidth: StyleSheet.hairlineWidth,\n  },\n  optionText: {\n    fontSize: 15,\n    alignSelf: 'flex-start',\n    marginTop: 1,\n  },\n});\n","import { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport * as React from 'react';\n\nimport TabBarIcon from '../components/TabBarIcon';\nimport HomeScreen from '../screens/HomeScreen';\nimport LinksScreen from '../screens/LinksScreen';\nimport ChatApp from '../Chat/src/index.js';\nconst BottomTab = createBottomTabNavigator();\nconst INITIAL_ROUTE_NAME = 'Home';\n\nexport default function BottomTabNavigator({ navigation, route }) {\n  // Set the header title on the parent stack navigator depending on the\n  // currently active tab. Learn more in the documentation:\n  // https://reactnavigation.org/docs/en/screen-options-resolution.html\n  navigation.setOptions({ headerTitle: getHeaderTitle(route) });\n\n  return (\n    <BottomTab.Navigator initialRouteName={INITIAL_ROUTE_NAME}>\n      <BottomTab.Screen\n        name=\"Home\"\n        component={ChatApp}\n        options={{\n          // title: 'Get Started',\n          // tabBarIcon: ({ focused }) => <TabBarIcon focused={focused} name=\"md-code-working\" />,\n        }}\n      />\n      {/* <BottomTab.Screen\n        name=\"Links\"\n        component={LinksScreen}\n        options={{\n          title: 'Resources',\n          tabBarIcon: ({ focused }) => <TabBarIcon focused={focused} name=\"md-book\" />,\n        }}\n      /> */}\n    </BottomTab.Navigator>\n  );\n}\n\nfunction getHeaderTitle(route) {\n  const routeName = route.state?.routes[route.state.index]?.name ?? INITIAL_ROUTE_NAME;\n\n  switch (routeName) {\n    case 'Home':\n      return 'Chats';\n    case 'Links':\n      return 'Links to learn more';\n  }\n}\n","import * as React from 'react';\nimport { Platform, StatusBar, StyleSheet, View } from 'react-native';\nimport { SplashScreen } from 'expo';\nimport * as Font from 'expo-font';\nimport { Ionicons } from '@expo/vector-icons';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\n\nimport BottomTabNavigator from './navigation/BottomTabNavigator';\nimport useLinking from './navigation/useLinking';\n\nconst Stack = createStackNavigator();\nimport ChatApp from './Chat/src/index';\n\nexport default function App(props) {\n  const [isLoadingComplete, setLoadingComplete] = React.useState(false);\n  const [initialNavigationState, setInitialNavigationState] = React.useState();\n  const containerRef = React.useRef();\n  const { getInitialState } = useLinking(containerRef);\n\n  // Load any resources or data that we need prior to rendering the app\n  React.useEffect(() => {\n    async function loadResourcesAndDataAsync() {\n      try {\n        SplashScreen.preventAutoHide();\n\n        // Load our initial navigation state\n        setInitialNavigationState(await getInitialState());\n\n        // Load fonts\n        await Font.loadAsync({\n          ...Ionicons.font,\n          'space-mono': require('./assets/fonts/SpaceMono-Regular.ttf'),\n        });\n      } catch (e) {\n        // We might want to provide this error information to an error reporting service\n        console.warn(e);\n      } finally {\n        setLoadingComplete(true);\n        SplashScreen.hide();\n      }\n    }\n\n    loadResourcesAndDataAsync();\n  }, []);\n\n  if (!isLoadingComplete && !props.skipLoadingScreen) {\n    return null;\n  } else {\n    return (\n      <View style={styles.container}>\n        {Platform.OS === 'ios' && <StatusBar barStyle=\"default\" />}\n        <NavigationContainer ref={containerRef} initialState={initialNavigationState}>\n          <Stack.Navigator>\n            <Stack.Screen name=\"Chats\" component={ChatApp} />\n          </Stack.Navigator>\n        </NavigationContainer>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n  },\n});\n","import { useLinking } from '@react-navigation/native';\nimport { Linking } from 'expo';\n\nexport default function(containerRef) {\n  return useLinking(containerRef, {\n    prefixes: [Linking.makeUrl('/')],\n    config: {\n      Root: {\n        path: 'root',\n        screens: {\n          Home: 'home',\n          Links: 'links',\n          Settings: 'settings',\n        },\n      },\n    },\n  });\n}\n","/* eslint-env browser */\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function() {\n    navigator.serviceWorker\n      .register('./expo-service-worker.js', { scope: './' })\n      .then(function(info) {\n        // console.info('Registered service-worker', info);\n      })\n      .catch(function(error) {\n        console.info('Failed to register service-worker', error);\n      });\n  });\n}\n","module.exports = __webpack_public_path__ + \"./fonts/SpaceMono-Regular.ttf\";"],"sourceRoot":""}